services:
  app:
    container_name: app
    build:
      context: ../app
      dockerfile: ../docker/dev/app.dev.dockerfile
    ports:
      ["3000:3000"]
    volumes:
      - ../app:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      NEXT_PUBLIC_API_URL: http://api:4000
      NODE_ENV: development
    restart: unless-stopped
    depends_on:
      - api
    networks:
      - app-network-dev

  api:
    container_name: api
    build:
      context: ../api
      dockerfile: ../docker/dev/api.dockerfile.dev
    ports:
      ["4000:4000"]
    volumes:
      - ../api:/usr/src/api
      - /usr/src/api/node_modules
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5433/ehr_manager?schema=public"
      NODE_ENV: development
    command: pnpm run start:dev
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network-dev

  db:
    container_name: db
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ehr_manager
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      ["5433:5433"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network-dev

volumes:
  pgdata:

networks:
  app-network-dev:
    driver: bridge